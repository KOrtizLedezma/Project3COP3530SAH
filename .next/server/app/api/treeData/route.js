"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/treeData/route";
exports.ids = ["app/api/treeData/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FtreeData%2Froute&page=%2Fapi%2FtreeData%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FtreeData%2Froute.js&appDir=%2FUsers%2Fgeorginavitola%2FDocuments%2FCOP3530%2FProject%203%2FProject3COP3530SAH%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fgeorginavitola%2FDocuments%2FCOP3530%2FProject%203%2FProject3COP3530SAH&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FtreeData%2Froute&page=%2Fapi%2FtreeData%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FtreeData%2Froute.js&appDir=%2FUsers%2Fgeorginavitola%2FDocuments%2FCOP3530%2FProject%203%2FProject3COP3530SAH%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fgeorginavitola%2FDocuments%2FCOP3530%2FProject%203%2FProject3COP3530SAH&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_georginavitola_Documents_COP3530_Project_3_Project3COP3530SAH_src_app_api_treeData_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/treeData/route.js */ \"(rsc)/./src/app/api/treeData/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/treeData/route\",\n        pathname: \"/api/treeData\",\n        filename: \"route\",\n        bundlePath: \"app/api/treeData/route\"\n    },\n    resolvedPagePath: \"/Users/georginavitola/Documents/COP3530/Project 3/Project3COP3530SAH/src/app/api/treeData/route.js\",\n    nextConfigOutput,\n    userland: _Users_georginavitola_Documents_COP3530_Project_3_Project3COP3530SAH_src_app_api_treeData_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/treeData/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0cmVlRGF0YSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGdHJlZURhdGElMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZ0cmVlRGF0YSUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRmdlb3JnaW5hdml0b2xhJTJGRG9jdW1lbnRzJTJGQ09QMzUzMCUyRlByb2plY3QlMjAzJTJGUHJvamVjdDNDT1AzNTMwU0FIJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmdlb3JnaW5hdml0b2xhJTJGRG9jdW1lbnRzJTJGQ09QMzUzMCUyRlByb2plY3QlMjAzJTJGUHJvamVjdDNDT1AzNTMwU0FIJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrRDtBQUMvSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3Nvbmdhc3NvY2lhdGlvbmhlbHBlci8/ZjY1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvZ2VvcmdpbmF2aXRvbGEvRG9jdW1lbnRzL0NPUDM1MzAvUHJvamVjdCAzL1Byb2plY3QzQ09QMzUzMFNBSC9zcmMvYXBwL2FwaS90cmVlRGF0YS9yb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdHJlZURhdGEvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90cmVlRGF0YVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvdHJlZURhdGEvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvZ2VvcmdpbmF2aXRvbGEvRG9jdW1lbnRzL0NPUDM1MzAvUHJvamVjdCAzL1Byb2plY3QzQ09QMzUzMFNBSC9zcmMvYXBwL2FwaS90cmVlRGF0YS9yb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdHJlZURhdGEvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FtreeData%2Froute&page=%2Fapi%2FtreeData%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FtreeData%2Froute.js&appDir=%2FUsers%2Fgeorginavitola%2FDocuments%2FCOP3530%2FProject%203%2FProject3COP3530SAH%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fgeorginavitola%2FDocuments%2FCOP3530%2FProject%203%2FProject3COP3530SAH&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/treeData/route.js":
/*!***************************************!*\
  !*** ./src/app/api/treeData/route.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_avlTreeSongs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/avlTreeSongs */ \"(rsc)/./src/app/components/avlTreeSongs.js\");\n/* harmony import */ var _components_avlTreeSongs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_components_avlTreeSongs__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const word = searchParams.get(\"word\");\n    // If the user does not type a word and clicks on the button, it returns an error\n    if (!word) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Word parameter is required\"\n        }, {\n            status: 400\n        });\n    }\n    const tree = new _components_avlTreeSongs__WEBPACK_IMPORTED_MODULE_3__.AVLTree();\n    // filepath has the inner path of our dataset\n    const filePath = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"src\", \"app\", \"Data\", \"DataSet.json\");\n    try {\n        const data = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(filePath, \"utf8\"));\n        // Iterates over each item in our dataset\n        data.forEach((item)=>{\n            const { Artist, Title, Album, \"Release Date\": releaseDateStr, Lyrics } = item;\n            const releaseDate = new Date(releaseDateStr);\n            const lyrics = String(Lyrics || \"\");\n            const song = new _components_avlTreeSongs__WEBPACK_IMPORTED_MODULE_3__.Song(Title, Artist, Album, releaseDate, lyrics);\n            if (song.lyrics.has(word.toLowerCase())) {\n                tree.insertSong(song);\n            }\n        });\n        // Saves the data of all the values we have to send to our home page\n        const bfsResult = Array.from(tree.bfs());\n        const dfsResult = Array.from(tree.dfs());\n        // Logging to debug findHighestOccurrence function\n        console.log(\"Tree before finding highest occurrence:\", tree);\n        const highestOccurrence = tree.findHighestOccurrence(word);\n        const lowestOccurrence = tree.findLowestOccurrence(word);\n        const artistWithHighestOccurrences = tree.findArtistWithHighestOccurrences(word);\n        console.log(\"Highest occurrence:\", highestOccurrence);\n        const treeData = tree.toReactD3TreeFormat();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            treeData,\n            bfsResult,\n            dfsResult,\n            highestOccurrence,\n            lowestOccurrence,\n            artistWithHighestOccurrences\n        });\n    } catch (error) {\n        console.error(\"Error processing tree data:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Error processing tree data\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS90cmVlRGF0YS9yb3V0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUEyQztBQUN2QjtBQUNJO0FBQ3NDO0FBRXZELGVBQWVLLElBQUlDLE9BQU87SUFDL0IsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBRyxJQUFJQyxJQUFJRixRQUFRRyxHQUFHO0lBQzVDLE1BQU1DLE9BQU9ILGFBQWFJLEdBQUcsQ0FBQztJQUU5QixpRkFBaUY7SUFDakYsSUFBSSxDQUFDRCxNQUFNO1FBQ1QsT0FBT1YscURBQVlBLENBQUNZLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQTZCLEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQ2xGO0lBRUEsTUFBTUMsT0FBTyxJQUFJWiw2REFBT0E7SUFDeEIsNkNBQTZDO0lBQzdDLE1BQU1hLFdBQVdkLGdEQUFTLENBQUNnQixRQUFRQyxHQUFHLElBQUksT0FBTyxPQUFPLFFBQVE7SUFFaEUsSUFBSTtRQUNGLE1BQU1DLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ3JCLHNEQUFlLENBQUNlLFVBQVU7UUFFbEQseUNBQXlDO1FBQ3pDSSxLQUFLSSxPQUFPLENBQUMsQ0FBQ0M7WUFDWixNQUFNLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxLQUFLLEVBQUUsZ0JBQWdCQyxjQUFjLEVBQUVDLE1BQU0sRUFBRSxHQUFHTDtZQUN6RSxNQUFNTSxjQUFjLElBQUlDLEtBQUtIO1lBQzdCLE1BQU1JLFNBQVNDLE9BQU9KLFVBQVU7WUFDaEMsTUFBTUssT0FBTyxJQUFJL0IsMERBQUlBLENBQUN1QixPQUFPRCxRQUFRRSxPQUFPRyxhQUFhRTtZQUV6RCxJQUFJRSxLQUFLRixNQUFNLENBQUNHLEdBQUcsQ0FBQzFCLEtBQUsyQixXQUFXLEtBQUs7Z0JBQ3ZDdEIsS0FBS3VCLFVBQVUsQ0FBQ0g7WUFDbEI7UUFDRjtRQUVBLG9FQUFvRTtRQUNwRSxNQUFNSSxZQUFZQyxNQUFNQyxJQUFJLENBQUMxQixLQUFLMkIsR0FBRztRQUNyQyxNQUFNQyxZQUFZSCxNQUFNQyxJQUFJLENBQUMxQixLQUFLNkIsR0FBRztRQUVyQyxrREFBa0Q7UUFDbERDLFFBQVFDLEdBQUcsQ0FBQywyQ0FBMkMvQjtRQUN2RCxNQUFNZ0Msb0JBQW9CaEMsS0FBS2lDLHFCQUFxQixDQUFDdEM7UUFDckQsTUFBTXVDLG1CQUFtQmxDLEtBQUttQyxvQkFBb0IsQ0FBQ3hDO1FBQ25ELE1BQU15QywrQkFBK0JwQyxLQUFLcUMsZ0NBQWdDLENBQUMxQztRQUMzRW1DLFFBQVFDLEdBQUcsQ0FBQyx1QkFBdUJDO1FBRW5DLE1BQU1NLFdBQVd0QyxLQUFLdUMsbUJBQW1CO1FBQ3pDLE9BQU90RCxxREFBWUEsQ0FBQ1ksSUFBSSxDQUFDO1lBQUV5QztZQUFVZDtZQUFXSTtZQUFXSTtZQUFtQkU7WUFBa0JFO1FBQTRCO0lBQzlILEVBQUUsT0FBT3RDLE9BQU87UUFDZGdDLFFBQVFoQyxLQUFLLENBQUMsK0JBQStCQTtRQUM3QyxPQUFPYixxREFBWUEsQ0FBQ1ksSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBNkIsR0FBRztZQUFFQyxRQUFRO1FBQUk7SUFDbEY7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Nvbmdhc3NvY2lhdGlvbmhlbHBlci8uL3NyYy9hcHAvYXBpL3RyZWVEYXRhL3JvdXRlLmpzP2QwYTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgQVZMVHJlZSwgU29uZyB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvYXZsVHJlZVNvbmdzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0KSB7XG4gIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgY29uc3Qgd29yZCA9IHNlYXJjaFBhcmFtcy5nZXQoJ3dvcmQnKTtcblxuICAvLyBJZiB0aGUgdXNlciBkb2VzIG5vdCB0eXBlIGEgd29yZCBhbmQgY2xpY2tzIG9uIHRoZSBidXR0b24sIGl0IHJldHVybnMgYW4gZXJyb3JcbiAgaWYgKCF3b3JkKSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdXb3JkIHBhcmFtZXRlciBpcyByZXF1aXJlZCcgfSwgeyBzdGF0dXM6IDQwMCB9KTtcbiAgfVxuXG4gIGNvbnN0IHRyZWUgPSBuZXcgQVZMVHJlZSgpO1xuICAvLyBmaWxlcGF0aCBoYXMgdGhlIGlubmVyIHBhdGggb2Ygb3VyIGRhdGFzZXRcbiAgY29uc3QgZmlsZVBhdGggPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3NyYycsICdhcHAnLCAnRGF0YScsICdEYXRhU2V0Lmpzb24nKTtcblxuICB0cnkge1xuICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhmaWxlUGF0aCwgJ3V0ZjgnKSk7XG5cbiAgICAvLyBJdGVyYXRlcyBvdmVyIGVhY2ggaXRlbSBpbiBvdXIgZGF0YXNldFxuICAgIGRhdGEuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgeyBBcnRpc3QsIFRpdGxlLCBBbGJ1bSwgXCJSZWxlYXNlIERhdGVcIjogcmVsZWFzZURhdGVTdHIsIEx5cmljcyB9ID0gaXRlbTtcbiAgICAgIGNvbnN0IHJlbGVhc2VEYXRlID0gbmV3IERhdGUocmVsZWFzZURhdGVTdHIpO1xuICAgICAgY29uc3QgbHlyaWNzID0gU3RyaW5nKEx5cmljcyB8fCAnJyk7XG4gICAgICBjb25zdCBzb25nID0gbmV3IFNvbmcoVGl0bGUsIEFydGlzdCwgQWxidW0sIHJlbGVhc2VEYXRlLCBseXJpY3MpO1xuXG4gICAgICBpZiAoc29uZy5seXJpY3MuaGFzKHdvcmQudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgdHJlZS5pbnNlcnRTb25nKHNvbmcpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gU2F2ZXMgdGhlIGRhdGEgb2YgYWxsIHRoZSB2YWx1ZXMgd2UgaGF2ZSB0byBzZW5kIHRvIG91ciBob21lIHBhZ2VcbiAgICBjb25zdCBiZnNSZXN1bHQgPSBBcnJheS5mcm9tKHRyZWUuYmZzKCkpO1xuICAgIGNvbnN0IGRmc1Jlc3VsdCA9IEFycmF5LmZyb20odHJlZS5kZnMoKSk7XG5cbiAgICAvLyBMb2dnaW5nIHRvIGRlYnVnIGZpbmRIaWdoZXN0T2NjdXJyZW5jZSBmdW5jdGlvblxuICAgIGNvbnNvbGUubG9nKCdUcmVlIGJlZm9yZSBmaW5kaW5nIGhpZ2hlc3Qgb2NjdXJyZW5jZTonLCB0cmVlKTtcbiAgICBjb25zdCBoaWdoZXN0T2NjdXJyZW5jZSA9IHRyZWUuZmluZEhpZ2hlc3RPY2N1cnJlbmNlKHdvcmQpO1xuICAgIGNvbnN0IGxvd2VzdE9jY3VycmVuY2UgPSB0cmVlLmZpbmRMb3dlc3RPY2N1cnJlbmNlKHdvcmQpO1xuICAgIGNvbnN0IGFydGlzdFdpdGhIaWdoZXN0T2NjdXJyZW5jZXMgPSB0cmVlLmZpbmRBcnRpc3RXaXRoSGlnaGVzdE9jY3VycmVuY2VzKHdvcmQpO1xuICAgIGNvbnNvbGUubG9nKCdIaWdoZXN0IG9jY3VycmVuY2U6JywgaGlnaGVzdE9jY3VycmVuY2UpO1xuXG4gICAgY29uc3QgdHJlZURhdGEgPSB0cmVlLnRvUmVhY3REM1RyZWVGb3JtYXQoKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyB0cmVlRGF0YSwgYmZzUmVzdWx0LCBkZnNSZXN1bHQsIGhpZ2hlc3RPY2N1cnJlbmNlLCBsb3dlc3RPY2N1cnJlbmNlLCBhcnRpc3RXaXRoSGlnaGVzdE9jY3VycmVuY2VzfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcHJvY2Vzc2luZyB0cmVlIGRhdGE6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnRXJyb3IgcHJvY2Vzc2luZyB0cmVlIGRhdGEnIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiZnMiLCJwYXRoIiwiQVZMVHJlZSIsIlNvbmciLCJHRVQiLCJyZXF1ZXN0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwid29yZCIsImdldCIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInRyZWUiLCJmaWxlUGF0aCIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsInJlYWRGaWxlU3luYyIsImZvckVhY2giLCJpdGVtIiwiQXJ0aXN0IiwiVGl0bGUiLCJBbGJ1bSIsInJlbGVhc2VEYXRlU3RyIiwiTHlyaWNzIiwicmVsZWFzZURhdGUiLCJEYXRlIiwibHlyaWNzIiwiU3RyaW5nIiwic29uZyIsImhhcyIsInRvTG93ZXJDYXNlIiwiaW5zZXJ0U29uZyIsImJmc1Jlc3VsdCIsIkFycmF5IiwiZnJvbSIsImJmcyIsImRmc1Jlc3VsdCIsImRmcyIsImNvbnNvbGUiLCJsb2ciLCJoaWdoZXN0T2NjdXJyZW5jZSIsImZpbmRIaWdoZXN0T2NjdXJyZW5jZSIsImxvd2VzdE9jY3VycmVuY2UiLCJmaW5kTG93ZXN0T2NjdXJyZW5jZSIsImFydGlzdFdpdGhIaWdoZXN0T2NjdXJyZW5jZXMiLCJmaW5kQXJ0aXN0V2l0aEhpZ2hlc3RPY2N1cnJlbmNlcyIsInRyZWVEYXRhIiwidG9SZWFjdEQzVHJlZUZvcm1hdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/treeData/route.js\n");

/***/ }),

/***/ "(rsc)/./src/app/components/avlTreeSongs.js":
/*!********************************************!*\
  !*** ./src/app/components/avlTreeSongs.js ***!
  \********************************************/
/***/ ((module) => {

eval("\nclass Song {\n    constructor(title, artist, album, releaseDate, lyrics){\n        this.title = title || \"Unknown Title\";\n        this.artist = artist || \"Unknown Artist\";\n        this.album = album || \"Unknown Album\";\n        this.releaseDate = releaseDate instanceof Date ? releaseDate : new Date(0);\n        this.lyrics = this.processLyrics(lyrics);\n    }\n    processLyrics(lyrics) {\n        if (typeof lyrics !== \"string\") {\n            console.warn(`Lyrics is not a string: ${lyrics}. Using empty string instead.`);\n            lyrics = \"\";\n        }\n        const lyricsMap = new Map();\n        const wordsArray = lyrics.split(\" \");\n        wordsArray.forEach((word)=>{\n            word = word.toLowerCase();\n            if (lyricsMap.has(word)) {\n                lyricsMap.set(word, lyricsMap.get(word) + 1);\n            } else {\n                lyricsMap.set(word, 1);\n            }\n        });\n        return lyricsMap;\n    }\n}\nclass AVLNode {\n    constructor(song){\n        this.song = song;\n        this.left = null;\n        this.right = null;\n        this.height = 1;\n    }\n}\nclass AVLTree {\n    constructor(){\n        this.root = null;\n        this.songs = []; // Store all songs for easier access\n    }\n    getHeight(node) {\n        if (node === null) {\n            return 0;\n        }\n        return node.height;\n    }\n    getBalance(node) {\n        if (node === null) {\n            return 0;\n        }\n        return this.getHeight(node.left) - this.getHeight(node.right);\n    }\n    getMax(a, b) {\n        return a > b ? a : b;\n    }\n    rightRotate(y) {\n        const x = y.left;\n        const T2 = x.right;\n        x.right = y;\n        y.left = T2;\n        y.height = this.getMax(this.getHeight(y.left), this.getHeight(y.right)) + 1;\n        x.height = this.getMax(this.getHeight(x.left), this.getHeight(x.right)) + 1;\n        return x;\n    }\n    leftRotate(x) {\n        const y = x.right;\n        const T2 = y.left;\n        y.left = x;\n        x.right = T2;\n        x.height = this.getMax(this.getHeight(x.left), this.getHeight(x.right)) + 1;\n        y.height = this.getMax(this.getHeight(y.left), this.getHeight(y.right)) + 1;\n        return y;\n    }\n    insert(node, song) {\n        if (node === null) {\n            this.songs.push(song); // Add song to songs array\n            return new AVLNode(song);\n        }\n        if (song.title < node.song.title) {\n            node.left = this.insert(node.left, song);\n        } else if (song.title > node.song.title) {\n            node.right = this.insert(node.right, song);\n        } else {\n            return node;\n        }\n        node.height = 1 + this.getMax(this.getHeight(node.left), this.getHeight(node.right));\n        const balance = this.getBalance(node);\n        if (balance > 1 && song.title < node.left.song.title) {\n            return this.rightRotate(node);\n        }\n        if (balance < -1 && song.title > node.right.song.title) {\n            return this.leftRotate(node);\n        }\n        if (balance > 1 && song.title > node.left.song.title) {\n            node.left = this.leftRotate(node.left);\n            return this.rightRotate(node);\n        }\n        if (balance < -1 && song.title < node.right.song.title) {\n            node.right = this.rightRotate(node.right);\n            return this.leftRotate(node);\n        }\n        return node;\n    }\n    insertSong(song) {\n        this.root = this.insert(this.root, song);\n    }\n    bfs() {\n        const result = new Set();\n        const queue = [];\n        if (this.root !== null) {\n            queue.push(this.root);\n        }\n        while(queue.length > 0){\n            const node = queue.shift();\n            result.add(`${node.song.title} by ${node.song.artist}`);\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n        return result;\n    }\n    dfs() {\n        const result = new Set();\n        this.dfsUtil(this.root, result);\n        return result;\n    }\n    dfsUtil(node, result) {\n        if (node !== null) {\n            result.add(`${node.song.title} by ${node.song.artist}`);\n            this.dfsUtil(node.left, result);\n            this.dfsUtil(node.right, result);\n        }\n    }\n    toReactD3TreeFormat() {\n        const convertNode = (node)=>{\n            if (!node) return null;\n            return {\n                name: node.song.title,\n                attributes: {\n                    artist: node.song.artist,\n                    album: node.song.album,\n                    releaseDate: node.song.releaseDate.toISOString().split(\"T\")[0]\n                },\n                children: [\n                    convertNode(node.left),\n                    convertNode(node.right)\n                ].filter(Boolean)\n            };\n        };\n        return convertNode(this.root);\n    }\n    findHighestOccurrence(targetWord) {\n        let highestCount = 0;\n        let songWithHighestCount = null;\n        const traverse = (node)=>{\n            if (!node) return;\n            const count = node.song.lyrics.get(targetWord.toLowerCase()) || 0;\n            if (count > highestCount) {\n                highestCount = count;\n                songWithHighestCount = node.song;\n            }\n            traverse(node.left);\n            traverse(node.right);\n        };\n        traverse(this.root);\n        return songWithHighestCount ? `${songWithHighestCount.title} by ${songWithHighestCount.artist}` : \"No occurrences found\";\n    }\n    findLowestOccurrence(targetWord) {\n        let lowestCount = Infinity;\n        let songWithLowestCount = null;\n        const traverse = (node)=>{\n            if (!node) return;\n            const count = node.song.lyrics.get(targetWord.toLowerCase()) || 0;\n            if (count > 0 && count < lowestCount) {\n                lowestCount = count;\n                songWithLowestCount = node.song;\n            }\n            traverse(node.left);\n            traverse(node.right);\n        };\n        traverse(this.root);\n        return songWithLowestCount ? `${songWithLowestCount.title} by ${songWithLowestCount.artist} with ${lowestCount}` : \"No occurrences found\";\n    }\n    findArtistWithHighestOccurrences(targetWord) {\n        const artistOccurrences = new Map();\n        const traverse = (node)=>{\n            if (!node) return;\n            const count = node.song.lyrics.get(targetWord.toLowerCase()) || 0;\n            if (count > 0) {\n                const artist = node.song.artist;\n                if (!artistOccurrences.has(artist)) {\n                    artistOccurrences.set(artist, 0);\n                }\n                artistOccurrences.set(artist, artistOccurrences.get(artist) + count);\n            }\n            traverse(node.left);\n            traverse(node.right);\n        };\n        traverse(this.root);\n        let highestArtist = {\n            artist: null,\n            count: 0\n        };\n        artistOccurrences.forEach((count, artist)=>{\n            if (count > highestArtist.count) {\n                highestArtist = {\n                    artist,\n                    count\n                };\n            }\n        });\n        return highestArtist;\n    }\n}\nmodule.exports = {\n    AVLTree,\n    Song\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/components/avlTreeSongs.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FtreeData%2Froute&page=%2Fapi%2FtreeData%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FtreeData%2Froute.js&appDir=%2FUsers%2Fgeorginavitola%2FDocuments%2FCOP3530%2FProject%203%2FProject3COP3530SAH%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fgeorginavitola%2FDocuments%2FCOP3530%2FProject%203%2FProject3COP3530SAH&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();